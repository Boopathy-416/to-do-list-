{"ast":null,"code":"// import React, { useState } from 'react';\n// import Header from './components/Header';\n// import TodoForm from './components/TodoForm';\n// import TodoList from './components/TodoList';\n// import FilterButtons from './components/FilterButtons';\n\n// function App() {\n//   const [tasks, setTasks] = useState([]);\n//   const [filter, setFilter] = useState('all');\n\n//   const addTask = (taskName) => {\n//     const newTask = { name: taskName, completed: false };\n//     setTasks([...tasks, newTask]);\n//   };\n\n//   const toggleTask = (index) => {\n//     const newTasks = tasks.map((task, i) =>\n//       i === index ? { ...task, completed: !task.completed } : task\n//     );\n//     setTasks(newTasks);\n//   };\n\n//   const deleteTask = (index) => {\n//     const newTasks = tasks.filter((task, i) => i !== index);\n//     setTasks(newTasks);\n//   };\n\n//   const filteredTasks = tasks.filter((task) => {\n//     if (filter === 'completed') return task.completed;\n//     if (filter === 'incomplete') return !task.completed;\n//     return true;\n//   });\n\n//   return (\n//     <div className=\"container\">\n//       <Header />\n//       <TodoForm addTask={addTask} />\n//       <FilterButtons setFilter={setFilter} />\n//       <TodoList tasks={filteredTasks} toggleTask={toggleTask} deleteTask={deleteTask} />\n//     </div>\n//   );\n// }\n\n// export default App;","map":{"version":3,"names":[],"sources":["Z:/plattr lab/task-app/src/App.js"],"sourcesContent":["// import React, { useState } from 'react';\n// import Header from './components/Header';\n// import TodoForm from './components/TodoForm';\n// import TodoList from './components/TodoList';\n// import FilterButtons from './components/FilterButtons';\n\n// function App() {\n//   const [tasks, setTasks] = useState([]);\n//   const [filter, setFilter] = useState('all');\n\n//   const addTask = (taskName) => {\n//     const newTask = { name: taskName, completed: false };\n//     setTasks([...tasks, newTask]);\n//   };\n\n//   const toggleTask = (index) => {\n//     const newTasks = tasks.map((task, i) =>\n//       i === index ? { ...task, completed: !task.completed } : task\n//     );\n//     setTasks(newTasks);\n//   };\n\n//   const deleteTask = (index) => {\n//     const newTasks = tasks.filter((task, i) => i !== index);\n//     setTasks(newTasks);\n//   };\n\n//   const filteredTasks = tasks.filter((task) => {\n//     if (filter === 'completed') return task.completed;\n//     if (filter === 'incomplete') return !task.completed;\n//     return true;\n//   });\n\n//   return (\n//     <div className=\"container\">\n//       <Header />\n//       <TodoForm addTask={addTask} />\n//       <FilterButtons setFilter={setFilter} />\n//       <TodoList tasks={filteredTasks} toggleTask={toggleTask} deleteTask={deleteTask} />\n//     </div>\n//   );\n// }\n\n// export default App;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}