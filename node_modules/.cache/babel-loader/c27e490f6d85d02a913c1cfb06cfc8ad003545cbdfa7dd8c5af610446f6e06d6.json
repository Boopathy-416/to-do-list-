{"ast":null,"code":"var _jsxFileName = \"Z:\\\\plattr lab\\\\task-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Header from './components/Header';\nimport TodoForm from './components/TodoForm';\nimport TodoList from './components/TodoList';\nimport FilterButtons from './components/FilterButtons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [filter, setFilter] = useState('all');\n  const addTask = taskName => {\n    const newTask = {\n      name: taskName,\n      completed: false\n    };\n    setTasks([...tasks, newTask]);\n  };\n  const toggleTask = index => {\n    const newTasks = tasks.map((task, i) => i === index ? {\n      ...task,\n      completed: !task.completed\n    } : task);\n    setTasks(newTasks);\n  };\n  const deleteTask = index => {\n    const newTasks = tasks.filter((task, i) => i !== index);\n    setTasks(newTasks);\n  };\n  const filteredTasks = tasks.filter(task => {\n    if (filter === 'completed') return task.completed;\n    if (filter === 'incomplete') return !task.completed;\n    return true;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoForm, {\n      addTask: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FilterButtons, {\n      setFilter: setFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n      tasks: filteredTasks,\n      toggleTask: toggleTask,\n      deleteTask: deleteTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"QPzHS6yxgTMd+mLLtAh4oSYXmow=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Header","TodoForm","TodoList","FilterButtons","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","filter","setFilter","addTask","taskName","newTask","name","completed","toggleTask","index","newTasks","map","task","i","deleteTask","filteredTasks","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["Z:/plattr lab/task-app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Header from './components/Header';\nimport TodoForm from './components/TodoForm';\nimport TodoList from './components/TodoList';\nimport FilterButtons from './components/FilterButtons';\n\nfunction App() {\n  const [tasks, setTasks] = useState([]);\n  const [filter, setFilter] = useState('all');\n\n  const addTask = (taskName) => {\n    const newTask = { name: taskName, completed: false };\n    setTasks([...tasks, newTask]);\n  };\n\n  const toggleTask = (index) => {\n    const newTasks = tasks.map((task, i) =>\n      i === index ? { ...task, completed: !task.completed } : task\n    );\n    setTasks(newTasks);\n  };\n\n  const deleteTask = (index) => {\n    const newTasks = tasks.filter((task, i) => i !== index);\n    setTasks(newTasks);\n  };\n\n  const filteredTasks = tasks.filter((task) => {\n    if (filter === 'completed') return task.completed;\n    if (filter === 'incomplete') return !task.completed;\n    return true;\n  });\n\n  return (\n    <div className=\"container\">\n      <Header />\n      <TodoForm addTask={addTask} />\n      <FilterButtons setFilter={setFilter} />\n      <TodoList tasks={filteredTasks} toggleTask={toggleTask} deleteTask={deleteTask} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,aAAa,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACW,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAE3C,MAAMa,OAAO,GAAIC,QAAQ,IAAK;IAC5B,MAAMC,OAAO,GAAG;MAAEC,IAAI,EAAEF,QAAQ;MAAEG,SAAS,EAAE;IAAM,CAAC;IACpDP,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAEM,OAAO,CAAC,CAAC;EAC/B,CAAC;EAED,MAAMG,UAAU,GAAIC,KAAK,IAAK;IAC5B,MAAMC,QAAQ,GAAGX,KAAK,CAACY,GAAG,CAAC,CAACC,IAAI,EAAEC,CAAC,KACjCA,CAAC,KAAKJ,KAAK,GAAG;MAAE,GAAGG,IAAI;MAAEL,SAAS,EAAE,CAACK,IAAI,CAACL;IAAU,CAAC,GAAGK,IAC1D,CAAC;IACDZ,QAAQ,CAACU,QAAQ,CAAC;EACpB,CAAC;EAED,MAAMI,UAAU,GAAIL,KAAK,IAAK;IAC5B,MAAMC,QAAQ,GAAGX,KAAK,CAACE,MAAM,CAAC,CAACW,IAAI,EAAEC,CAAC,KAAKA,CAAC,KAAKJ,KAAK,CAAC;IACvDT,QAAQ,CAACU,QAAQ,CAAC;EACpB,CAAC;EAED,MAAMK,aAAa,GAAGhB,KAAK,CAACE,MAAM,CAAEW,IAAI,IAAK;IAC3C,IAAIX,MAAM,KAAK,WAAW,EAAE,OAAOW,IAAI,CAACL,SAAS;IACjD,IAAIN,MAAM,KAAK,YAAY,EAAE,OAAO,CAACW,IAAI,CAACL,SAAS;IACnD,OAAO,IAAI;EACb,CAAC,CAAC;EAEF,oBACEX,OAAA;IAAKoB,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBrB,OAAA,CAACL,MAAM;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVzB,OAAA,CAACJ,QAAQ;MAACW,OAAO,EAAEA;IAAQ;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC9BzB,OAAA,CAACF,aAAa;MAACQ,SAAS,EAAEA;IAAU;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACvCzB,OAAA,CAACH,QAAQ;MAACM,KAAK,EAAEgB,aAAc;MAACP,UAAU,EAAEA,UAAW;MAACM,UAAU,EAAEA;IAAW;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/E,CAAC;AAEV;AAACvB,EAAA,CAnCQD,GAAG;AAAAyB,EAAA,GAAHzB,GAAG;AAqCZ,eAAeA,GAAG;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}