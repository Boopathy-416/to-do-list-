{"ast":null,"code":"var _jsxFileName = \"Z:\\\\plattr lab\\\\task-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import Header from './components/Header';\n// import TodoForm from './components/TodoForm';\n// import TodoList from './components/TodoList';\n// import FilterButtons from './components/FilterButtons';\n\n// function App() {\n//   const [tasks, setTasks] = useState([]);\n//   const [filter, setFilter] = useState('all');\n\n//   const addTask = (taskName) => {\n//     const newTask = { name: taskName, completed: false };\n//     setTasks([...tasks, newTask]);\n//   };\n\n//   const toggleTask = (index) => {\n//     const newTasks = tasks.map((task, i) =>\n//       i === index ? { ...task, completed: !task.completed } : task\n//     );\n//     setTasks(newTasks);\n//   };\n\n//   const deleteTask = (index) => {\n//     const newTasks = tasks.filter((task, i) => i !== index);\n//     setTasks(newTasks);\n//   };\n\n//   const filteredTasks = tasks.filter((task) => {\n//     if (filter === 'completed') return task.completed;\n//     if (filter === 'incomplete') return !task.completed;\n//     return true;\n//   });\n\n//   return (\n//     <div className=\"container\">\n//       <Header />\n//       <TodoForm addTask={addTask} />\n//       <FilterButtons setFilter={setFilter} />\n//       <TodoList tasks={filteredTasks} toggleTask={toggleTask} deleteTask={deleteTask} />\n//     </div>\n//   );\n// }\n\n// export default App;\nimport React, { useState } from 'react';\nimport Header from './components/';\nimport TodoForm from './components/TodoForm';\nimport TodoList from './components/TodoList';\nimport FilterButtons from './components/FilterButtons';\nimport './App.css'; // Import the CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [filter, setFilter] = useState('all');\n  const addTask = taskName => {\n    const newTask = {\n      name: taskName,\n      completed: false,\n      isEditing: false\n    };\n    setTasks([...tasks, newTask]);\n  };\n  const toggleTask = index => {\n    const newTasks = tasks.map((task, i) => i === index ? {\n      ...task,\n      completed: !task.completed\n    } : task);\n    setTasks(newTasks);\n  };\n  const deleteTask = index => {\n    const newTasks = tasks.filter((task, i) => i !== index);\n    setTasks(newTasks);\n  };\n  const startEditing = index => {\n    const newTasks = tasks.map((task, i) => i === index ? {\n      ...task,\n      isEditing: !task.isEditing\n    } : task);\n    setTasks(newTasks);\n  };\n  const editTask = (e, index) => {\n    const newTasks = tasks.map((task, i) => i === index ? {\n      ...task,\n      name: e.target.value\n    } : task);\n    setTasks(newTasks);\n  };\n  const filteredTasks = tasks.filter(task => {\n    if (filter === 'completed') return task.completed;\n    if (filter === 'incomplete') return !task.completed;\n    return true;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoForm, {\n      addTask: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FilterButtons, {\n      setFilter: setFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n      tasks: filteredTasks,\n      toggleTask: toggleTask,\n      deleteTask: deleteTask,\n      startEditing: startEditing,\n      editTask: editTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"QPzHS6yxgTMd+mLLtAh4oSYXmow=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Header","TodoForm","TodoList","FilterButtons","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","filter","setFilter","addTask","taskName","newTask","name","completed","isEditing","toggleTask","index","newTasks","map","task","i","deleteTask","startEditing","editTask","e","target","value","filteredTasks","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["Z:/plattr lab/task-app/src/App.js"],"sourcesContent":["// import React, { useState } from 'react';\n// import Header from './components/Header';\n// import TodoForm from './components/TodoForm';\n// import TodoList from './components/TodoList';\n// import FilterButtons from './components/FilterButtons';\n\n// function App() {\n//   const [tasks, setTasks] = useState([]);\n//   const [filter, setFilter] = useState('all');\n\n//   const addTask = (taskName) => {\n//     const newTask = { name: taskName, completed: false };\n//     setTasks([...tasks, newTask]);\n//   };\n\n//   const toggleTask = (index) => {\n//     const newTasks = tasks.map((task, i) =>\n//       i === index ? { ...task, completed: !task.completed } : task\n//     );\n//     setTasks(newTasks);\n//   };\n\n//   const deleteTask = (index) => {\n//     const newTasks = tasks.filter((task, i) => i !== index);\n//     setTasks(newTasks);\n//   };\n\n//   const filteredTasks = tasks.filter((task) => {\n//     if (filter === 'completed') return task.completed;\n//     if (filter === 'incomplete') return !task.completed;\n//     return true;\n//   });\n\n//   return (\n//     <div className=\"container\">\n//       <Header />\n//       <TodoForm addTask={addTask} />\n//       <FilterButtons setFilter={setFilter} />\n//       <TodoList tasks={filteredTasks} toggleTask={toggleTask} deleteTask={deleteTask} />\n//     </div>\n//   );\n// }\n\n// export default App;\nimport React, { useState } from 'react';\nimport Header from './components/';\nimport TodoForm from './components/TodoForm';\nimport TodoList from './components/TodoList';\nimport FilterButtons from './components/FilterButtons';\nimport './App.css'; // Import the CSS file\n\nfunction App() {\n  const [tasks, setTasks] = useState([]);\n  const [filter, setFilter] = useState('all');\n\n  const addTask = (taskName) => {\n    const newTask = { name: taskName, completed: false, isEditing: false };\n    setTasks([...tasks, newTask]);\n  };\n\n  const toggleTask = (index) => {\n    const newTasks = tasks.map((task, i) =>\n      i === index ? { ...task, completed: !task.completed } : task\n    );\n    setTasks(newTasks);\n  };\n\n  const deleteTask = (index) => {\n    const newTasks = tasks.filter((task, i) => i !== index);\n    setTasks(newTasks);\n  };\n\n  const startEditing = (index) => {\n    const newTasks = tasks.map((task, i) =>\n      i === index ? { ...task, isEditing: !task.isEditing } : task\n    );\n    setTasks(newTasks);\n  };\n\n  const editTask = (e, index) => {\n    const newTasks = tasks.map((task, i) =>\n      i === index ? { ...task, name: e.target.value } : task\n    );\n    setTasks(newTasks);\n  };\n\n  const filteredTasks = tasks.filter((task) => {\n    if (filter === 'completed') return task.completed;\n    if (filter === 'incomplete') return !task.completed;\n    return true;\n  });\n\n  return (\n    <div className=\"container\">\n      <Header />\n      <TodoForm addTask={addTask} />\n      <FilterButtons setFilter={setFilter} />\n      <TodoList\n        tasks={filteredTasks}\n        toggleTask={toggleTask}\n        deleteTask={deleteTask}\n        startEditing={startEditing}\n        editTask={editTask}\n      />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}